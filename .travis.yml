language: rust
sudo: false

addons:
  apt:
    packages:
      - libssl-dev
      - cmake
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

os:
  - osx
  - linux

rust:
  - stable
  - beta
  - nightly

cache: cargo

script: 
  # osx dependencies
  - "if [ ${TRAVIS_OS_NAME} = 'osx' ]; then brew update; fi"
  - "if [ ${TRAVIS_OS_NAME} = 'osx' ]; then brew install cmake; fi"
  # install srt
  - git clone https://github.com/haivision/srt
  - mkdir srt/build && cd srt/build
  - cmake .. -DCMAKE_INSTALL_PREFIX=~/.local/
  - cmake --build . --target install
  - export PATH=~/.local/bin:$PATH
  - cd ../..
  # build & run tests
  - cargo build --verbose
  - RUST_LOG=srt=info,lossy=info,message_splitting=info RUST_BACKTRACE=full cargo test --verbose

after_success: |  
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. -DCMAKE_INSTALL_PREFIX=~/.local &&
  make &&
  make install &&
  cd ../.. &&
  rm -rf kcov-master master.tar.gz &&
  for file in target/debug/{latency_exchange,lossy,message_splitting,not_enough_latency,single_packet_tsbpd,srt,stransmit_interop}-*[^\.d]
    do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"
  done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"